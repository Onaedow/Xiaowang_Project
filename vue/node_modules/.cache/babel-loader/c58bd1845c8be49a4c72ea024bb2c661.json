{"ast":null,"code":"import request from \"@/utils/request\";\nimport ValidCode from \"@/components/ValidCode\";\nexport default {\n  name: \"Login\",\n  components: {\n    ValidCode\n  },\n\n  data() {\n    return {\n      form: {\n        role: 1\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      },\n      validCode: ''\n    };\n  },\n\n  created() {\n    sessionStorage.removeItem(\"user\");\n  },\n\n  methods: {\n    //接收验证码组件提交的4位的验证码\n    createValidCode(data) {\n      this.validCode = data;\n    },\n\n    login() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          if (!this.form.validCode) {\n            this.$message.error(\"请填写验证码\");\n            return;\n          }\n\n          if (this.form.validCode.toLowerCase() !== this.validCode.toLowerCase()) {\n            this.$message.error(\"验证码错误\");\n            return;\n          }\n\n          request.post(\"/user/login\", this.form).then(res => {\n            if (res.code === '0') {\n              this.$message({\n                type: \"success\",\n                message: \"登陆成功\"\n              });\n              sessionStorage.setItem(\"user\", JSON.stringify(res.data)); //缓存用户信息\n\n              this.$router.push(\"/\"); //登陆成功以后跳转主页\n            } else {\n              this.$message({\n                type: \"error\",\n                message: res.msg\n              });\n            }\n          });\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA8BA,OAAOA,OAAP,MAAoB,iBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,eAAe;EACbC,IAAI,EAAE,OADO;EAEbC,UAAU,EAAE;IACVF;EADU,CAFC;;EAKbG,IAAI,GAAG;IACL,OAAO;MACLC,IAAI,EAAE;QAACC,IAAI,EAAE;MAAP,CADD;MAELC,KAAI,EAAI;QACNC,QAAQ,EAAE,CACR;UAACC,QAAQ,EAAE,IAAX;UAAiBC,OAAO,EAAE,QAA1B;UAAoCC,OAAO,EAAE;QAA7C,CADQ,CADJ;QAINC,QAAQ,EAAE,CACR;UAACH,QAAQ,EAAE,IAAX;UAAiBC,OAAO,EAAE,OAA1B;UAAmCC,OAAO,EAAE;QAA5C,CADQ;MAJJ,CAFH;MAULE,SAAS,EAAE;IAVN,CAAP;EAYD,CAlBY;;EAmBbC,OAAO,GAAG;IACRC,cAAc,CAACC,UAAf,CAA0B,MAA1B;EACD,CArBY;;EAsBbC,OAAO,EAAE;IACP;IACAC,eAAe,CAACd,IAAD,EAAO;MACpB,KAAKS,SAAL,GAAiBT,IAAjB;IACD,CAJM;;IAKPe,KAAI,GAAK;MACP,KAAKC,KAAL,CAAW,MAAX,EAAmBC,QAAnB,CAA6BC,KAAD,IAAW;QACrC,IAAIA,KAAJ,EAAW;UACT,IAAI,CAAC,KAAKjB,IAAL,CAAUQ,SAAf,EAA0B;YACxB,KAAKU,QAAL,CAAcC,KAAd,CAAoB,QAApB;YACA;UACF;;UACA,IAAG,KAAKnB,IAAL,CAAUQ,SAAV,CAAoBY,WAApB,OAAsC,KAAKZ,SAAL,CAAeY,WAAf,EAAzC,EAAuE;YACrE,KAAKF,QAAL,CAAcC,KAAd,CAAoB,OAApB;YACA;UACF;;UACAxB,OAAO,CAAC0B,IAAR,CAAa,aAAb,EAA4B,KAAKrB,IAAjC,EAAuCsB,IAAvC,CAA4CC,GAAE,IAAK;YACjD,IAAIA,GAAG,CAACC,IAAJ,KAAa,GAAjB,EAAsB;cACpB,KAAKN,QAAL,CAAc;gBACZO,IAAI,EAAE,SADM;gBAEZpB,OAAO,EAAE;cAFG,CAAd;cAIAK,cAAc,CAACgB,OAAf,CAAuB,MAAvB,EAA+BC,IAAI,CAACC,SAAL,CAAeL,GAAG,CAACxB,IAAnB,CAA/B,EALoB,CAKqC;;cACzD,KAAK8B,OAAL,CAAaC,IAAb,CAAkB,GAAlB,EANoB,CAMG;YACzB,CAPA,MAOO;cACL,KAAKZ,QAAL,CAAc;gBACZO,IAAI,EAAE,OADM;gBAEZpB,OAAO,EAAEkB,GAAG,CAACQ;cAFD,CAAd;YAIF;UACD,CAdD;QAeF;MACD,CA1BD;IA2BF;;EAjCO;AAtBI,CAAf","names":["request","ValidCode","name","components","data","form","role","rules","username","required","message","trigger","password","validCode","created","sessionStorage","removeItem","methods","createValidCode","login","$refs","validate","valid","$message","error","toLowerCase","post","then","res","code","type","setItem","JSON","stringify","$router","push","msg"],"sourceRoot":"","sources":["/Users/dziunzrirdjin/Desktop/springboot+vue/vue/src/views/Login.vue"],"sourcesContent":["<template>\n  <div style=\"width: 100%; height: 100vh; background-color: blanchedalmond; overflow: hidden\">\n    <div style=\"width: 400px; margin: 150px auto\">\n      <div style=\"color: darkcyan; font-size: 30px; text-align: center; padding: 30px 0\">欢迎登陆</div>\n      <el-form :model=\"form\" size=\"normal\" :rules=\"rules\" ref=\"form\">\n        <el-form-item prop=\"username\">\n          <el-input prefix-icon=\"UserFilled\" v-model=\"form.username\" placeholder=\"请输入账号\"/>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input prefix-icon=\"Lock\" v-model=\"form.password\" show-password placeholder=\"请输入密码\"/>\n        </el-form-item>\n        <el-form-item>\n          <div style=\"display: flex\">\n            <el-input prefix-icon=\"Key\" v-model=\"form.validCode\" style=\"width: 50%;\" placeholder=\"请输入验证码\"></el-input>\n            <ValidCode @input=\"createValidCode\"></ValidCode>\n          </div>\n        </el-form-item>\n<!--        <el-form-item>-->\n<!--          <el-radio v-model=\"form.role\" :label=\"1\" >管理员</el-radio>-->\n<!--          <el-radio v-model=\"form.role\" :label=\"2\" >普通用户</el-radio>-->\n<!--        </el-form-item>-->\n        <el-form-item>\n          <el-button style=\"width: 100%\" type=\"primary\" @click=\"login\">登陆</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport request from \"@/utils/request\";\nimport ValidCode from \"@/components/ValidCode\";\n\nexport default {\n  name: \"Login\",\n  components: {\n    ValidCode\n  },\n  data() {\n    return {\n      form: {role: 1},\n      rules : {\n        username: [\n          {required: true, message: '请输入用户名', trigger: 'blur'}\n        ],\n        password: [\n          {required: true, message: '请输入密码', trigger: 'blur'}\n        ]\n      },\n      validCode: ''\n    }\n  },\n  created() {\n    sessionStorage.removeItem(\"user\")\n  },\n  methods: {\n    //接收验证码组件提交的4位的验证码\n    createValidCode(data) {\n      this.validCode = data\n    },\n    login () {\n      this.$refs['form'].validate((valid) => {\n        if (valid) {\n          if (!this.form.validCode) {\n            this.$message.error(\"请填写验证码\")\n            return\n          }\n          if(this.form.validCode.toLowerCase() !== this.validCode.toLowerCase()) {\n            this.$message.error(\"验证码错误\")\n            return\n          }\n          request.post(\"/user/login\", this.form).then(res => {\n            if (res.code === '0') {\n              this.$message({\n                type: \"success\",\n                message: \"登陆成功\"\n              })\n              sessionStorage.setItem(\"user\", JSON.stringify(res.data)) //缓存用户信息\n              this.$router.push(\"/\") //登陆成功以后跳转主页\n            } else {\n              this.$message({\n                type: \"error\",\n                message: res.msg\n              })\n            }\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}